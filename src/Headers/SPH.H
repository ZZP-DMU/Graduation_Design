#ifndef __SPH_H__
#define __SPH_H__


/* Headers Include Here*/
//#include <omp.h>
#include <PreProcess.H>
#include <Lib.H>


/* Define Symbols Here*/
#define READ_STL 0  //if or not read stl format file to generate particles
#define DOMAIN_LENGTH 12.0    //computational domain length
#define DOAMIN_DEEPTH 5.0     //computational domain deepth

#define PTC_SPACING 0.1    //spacing between particles
#define PTC_SML 0.01    //smoothed leng of particles 

#define DOMAIN_LENGTH_NUM (int)(DOMAIN_LENGTH/PTC_SPACING+1)
#define DOMAIN_DEEPTH_NUM (int)(DOAMIN_DEEPTH/PTC_SPACING+1)

#define FLUID_PTC_NUM (DOMAIN_LENGTH_NUM)*(DOMAIN_DEEPTH_NUM)  //液体例子数
#define SOLID_PTC_NUM 1600  //刚体粒子数
#define VIRTUAL_PTC_NUM 1600    //虚拟粒子数
#define PTC_TOL_NUM (FLUID_PTC_NUM+SOLID_PTC_NUM+VIRTUAL_PTC_NUM)   //总粒子数


/* Data Structure Declare */
typedef  struct 
{
    /* declare the position,velosity,pressure,density,type of the particle */
    double *x;  //x coordinations of position
    double *y;  //y coordinations of position
    double *vx; //x-direction velosity
    double *vy; //y-direction velosity
    double *pressure;   //pressure of paritcle
    double *density;    //density of particle
    char *type;
}SPH_PARTICLE;

typedef struct 
{
    /* declare the kernel value and differential kernel value of each */
    /* pare of the particle */
    double *w; //the kenerl
    double *dwdx; //the differential kernel in x-direction
    double *dwdy; //the differential kerenl in y-direction
}SPH_KERNEL;

typedef struct 
{
    /* particle pare generated by NNPS algorithm */
    int *i;
    int *j;
}SPH_PARE;

extern SPH_PARTICLE particle;
extern SPH_KERNEL kernel;
extern SPH_PARE pare;

extern double x[PTC_TOL_NUM];
extern double y[PTC_TOL_NUM];





#endif
