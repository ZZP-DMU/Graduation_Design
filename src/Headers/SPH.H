#ifndef __SPH_H__
#define __SPH_H__


/* Define Symbols Here*/
#define READ_STL 0  //if or not read stl format file to generate particles
#define DOMAIN_LENGTH 12.0    //computational domain length
#define DOAMIN_DEEPTH 5.0     //computational domain deepth

#define PTC_SPACING 0.001    //spacing between particles
#define PTC_SML 0.001    //smoothed leng of particles
#define PTC_REGION_RADIUS 0.002 //particle support region radius,which is PTC_SML*2


#define DOMAIN_LENGTH_NUM (int)(DOMAIN_LENGTH/PTC_SPACING+1)
#define DOMAIN_DEEPTH_NUM (int)(DOAMIN_DEEPTH/PTC_SPACING+1)

#define FLUID_PTC_NUM (DOMAIN_LENGTH_NUM)*(DOMAIN_DEEPTH_NUM)  //液体例子数
#define SOLID_PTC_NUM 1600  //刚体粒子数
#define VIRTUAL_PTC_NUM 1600    //虚拟粒子数
#define PTC_TOL_NUM (FLUID_PTC_NUM+SOLID_PTC_NUM+VIRTUAL_PTC_NUM)   //总粒子数

// two paritcles distance
#define PTC_DISTANCE(a,b) (sqrt(pow(particle->x[a]-particle->x[b],2)+pow(particle->y[a]-particle->y[b],2)))

/* Data Structure Declare */
typedef  struct 
{
    /* declare the position,velosity,pressure,density,type of the particle */
    double *x;  //x coordinations of position
    double *y;  //y coordinations of position
    double *vx; //x-direction velosity
    double *vy; //y-direction velosity
    double *accx;   //x-direction acceleration 
    double *accy;   //y-direction acceleration
    double *pressure;   //pressure of paritcle
    double *density;    //density of particle
    double *dif_density;    //differential density value
    double *mass;   //mass of particle
    char *type; //particle type:0 denote fulid;1 denote rigid;-1 denote dummy particles
}SPH_PARTICLE;

typedef struct 
{
    /* declare the kernel and differential kernel value of each pair */
    double *w;  //kernel value
    double *dwdx;   //differential kernel value in x-direction
    double *dwdy;   //differential kernel value in y-direction
}SPH_KERNEL;


typedef struct 
{
    /* particle pare generated by NNPS algorithm */
    unsigned int total;
    int *i;
    int *j;
}SPH_PAIR;

extern SPH_PARTICLE particle;
extern SPH_PAIR pare;

extern double x[PTC_TOL_NUM];
extern double y[PTC_TOL_NUM];



/* Headers Include Here*/
//#include <omp.h>
#include "Lib.H"
#include "PreProcess.H"
#include "PostProcess.H"


#endif
